// <auto-generated />
using System;
using Application.Infastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Application.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230318170525_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Application.Domain.Entities.ApplicationForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Choice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentResidence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DropDownQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUploadQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxChoiceAllowed")
                        .HasColumnType("int");

                    b.Property<string>("MaxVideoTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("MaxVideoTimeInMinSec")
                        .HasColumnType("time");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MultiChoiceQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParagraphQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PictureUpload")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("QuestionType")
                        .HasColumnType("int");

                    b.Property<string>("Resume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoQuestion1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoQuestion2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YesOrNoQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationForms");
                });

            modelBuilder.Entity("Application.Domain.Entities.Preview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Previews");
                });

            modelBuilder.Entity("Application.Domain.Entities.ProgramDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ApplicationClose")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApplicationCriteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApplicationOpen")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeySkils")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxNumOfApplication")
                        .HasColumnType("int");

                    b.Property<int>("MinQualification")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PreviewId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProgramBenefits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgramLocation")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProgramStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgramTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgramType")
                        .HasColumnType("int");

                    b.Property<string>("SummaryOfTheProgram")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PreviewId")
                        .IsUnique();

                    b.ToTable("ProgramDetails");
                });

            modelBuilder.Entity("Application.Domain.Entities.StageType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Applied")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Offered")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WorkFlowId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkFlowId");

                    b.ToTable("StageTypes");
                });

            modelBuilder.Entity("Application.Domain.Entities.VideoInterview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DurationMinAndSec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxVideoDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StageTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SubmissionDeadline")
                        .HasColumnType("int");

                    b.Property<string>("VideoQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StageTypeId");

                    b.ToTable("VideoInterviews");
                });

            modelBuilder.Entity("Application.Domain.Entities.WorkFlow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkFlows");
                });

            modelBuilder.Entity("Application.Domain.Entities.ProgramDetail", b =>
                {
                    b.HasOne("Application.Domain.Entities.Preview", "Previews")
                        .WithOne("ProgramDetails")
                        .HasForeignKey("Application.Domain.Entities.ProgramDetail", "PreviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Previews");
                });

            modelBuilder.Entity("Application.Domain.Entities.StageType", b =>
                {
                    b.HasOne("Application.Domain.Entities.WorkFlow", "WorkFlows")
                        .WithMany("StageTypes")
                        .HasForeignKey("WorkFlowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkFlows");
                });

            modelBuilder.Entity("Application.Domain.Entities.VideoInterview", b =>
                {
                    b.HasOne("Application.Domain.Entities.StageType", "StageTypes")
                        .WithMany("VideoInterviews")
                        .HasForeignKey("StageTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StageTypes");
                });

            modelBuilder.Entity("Application.Domain.Entities.Preview", b =>
                {
                    b.Navigation("ProgramDetails");
                });

            modelBuilder.Entity("Application.Domain.Entities.StageType", b =>
                {
                    b.Navigation("VideoInterviews");
                });

            modelBuilder.Entity("Application.Domain.Entities.WorkFlow", b =>
                {
                    b.Navigation("StageTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
